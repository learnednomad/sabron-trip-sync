name: CodeQL Security Analysis

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run CodeQL analysis daily at 03:00 UTC
    - cron: '0 3 * * *'
  workflow_dispatch:

jobs:
  analyze:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'typescript']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Initialize CodeQL tools for scanning
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v4
        with:
          languages: ${{ matrix.language }}
          # Override default queries with security-focused queries
          queries: security-extended,security-and-quality
          # Add custom CodeQL configuration
          config-file: ./.github/codeql/codeql-config.yml

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.17.0'

      - name: Install pnpm
        run: corepack enable && corepack prepare pnpm@10.12.3 --activate

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm/store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Build the project for analysis
      - name: Build for CodeQL analysis
        run: |
          # Build all packages for comprehensive analysis
          pnpm turbo run build --filter='{packages/*}' --filter='{services/*}' --filter='{apps/web}'

      # Perform CodeQL analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v4
        with:
          category: "/language:${{matrix.language}}"
          upload: true
          
      # Additional security checks
      - name: Check for security anti-patterns
        run: |
          echo "## Security Pattern Analysis" > security-patterns.md
          echo "Checking for common security anti-patterns..." >> security-patterns.md
          
          # Check for hardcoded secrets patterns
          if grep -r "password.*=" --include="*.ts" --include="*.js" --include="*.tsx" --include="*.jsx" .; then
            echo "⚠️  Potential hardcoded passwords found" >> security-patterns.md
          fi
          
          # Check for SQL injection patterns
          if grep -r "query.*+.*req\." --include="*.ts" --include="*.js" .; then
            echo "⚠️  Potential SQL injection vulnerability found" >> security-patterns.md
          fi
          
          # Check for XSS patterns
          if grep -r "innerHTML.*req\." --include="*.ts" --include="*.js" --include="*.tsx" --include="*.jsx" .; then
            echo "⚠️  Potential XSS vulnerability found" >> security-patterns.md
          fi
          
          # Check for insecure random patterns
          if grep -r "Math.random" --include="*.ts" --include="*.js" --include="*.tsx" --include="*.jsx" .; then
            echo "⚠️  Insecure random number generation found - use crypto.randomBytes instead" >> security-patterns.md
          fi
          
          echo "Security pattern analysis completed" >> security-patterns.md

      - name: Upload security patterns analysis
        uses: actions/upload-artifact@v4
        with:
          name: security-patterns-${{ matrix.language }}
          path: security-patterns.md
          retention-days: 30