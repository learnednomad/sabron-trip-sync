name: Project Board Automation GitHub Script

on:
  issues:
    types: [opened, closed, labeled, unlabeled]
  pull_request:
    types: [opened, closed, labeled, unlabeled, ready_for_review]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  add-to-project-graphql:
    runs-on: ubuntu-latest
    steps:
      - name: Add to Project via GraphQL
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PROJECT_TOKEN }}
          script: |
            const { context } = require('@actions/github');
            
            console.log('ðŸŽ¯ Project automation workflow started successfully!');
            console.log('Event:', context.eventName);
            console.log('Action:', context.payload.action);
            
            // Get the item to add (issue or PR)
            const item = context.payload.issue || context.payload.pull_request;
            if (!item) {
              console.log('No issue or PR found in payload');
              return;
            }
            
            console.log(`Processing ${context.payload.issue ? 'issue' : 'PR'} #${item.number}: ${item.title}`);
            
            // Check if item has relevant labels
            const relevantLabels = [
              'feature:auth', 'feature:itinerary', 'feature:visa', 'feature:cultural',
              'feature:expense', 'feature:social', 'feature:maps', 'feature:booking', 
              'feature:safety', 'feature:offline', 'feature:analytics', 'bug', 
              'enhancement', 'security', 'ci-cd', 'documentation'
            ];
            
            const itemLabels = item.labels?.map(label => label.name) || [];
            const hasRelevantLabel = relevantLabels.some(label => itemLabels.includes(label));
            
            if (!hasRelevantLabel) {
              console.log('Item does not have relevant labels, skipping');
              return;
            }
            
            console.log('âœ… Item has relevant labels, would add to project');
            console.log('Labels:', itemLabels);
            
            // TODO: Add actual GraphQL mutation to add to project
            // For now, just log success to confirm workflow works
            console.log('ðŸš€ Workflow completed successfully without startup_failure!');