name: Setup Branch Protection

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to protect'
        required: true
        default: 'main'
        type: string

jobs:
  setup-protection:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      administration: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Branch Protection Rules
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const branch = '${{ inputs.branch }}';
            
            // Read branch protection configuration
            const protectionConfig = JSON.parse(
              fs.readFileSync('.github/branch-protection.json', 'utf8')
            );
            
            try {
              // Apply branch protection rules
              const response = await github.rest.repos.updateBranchProtection({
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: branch,
                ...protectionConfig.protection
              });
              
              console.log(`✅ Branch protection rules applied to ${branch}`);
              console.log('Protection settings:', JSON.stringify(response.data, null, 2));
              
              // Create a summary
              await core.summary
                .addHeading(`Branch Protection Setup Complete`)
                .addTable([
                  [{ data: 'Setting', header: true }, { data: 'Status', header: true }],
                  ['Branch', branch],
                  ['Required Status Checks', '✅ Enabled'],
                  ['Dismiss Stale Reviews', protectionConfig.protection.required_pull_request_reviews.dismiss_stale_reviews ? '✅ Yes' : '❌ No'],
                  ['Require Code Owner Reviews', protectionConfig.protection.required_pull_request_reviews.require_code_owner_reviews ? '✅ Yes' : '❌ No'],
                  ['Required Approving Reviews', protectionConfig.protection.required_pull_request_reviews.required_approving_review_count.toString()],
                  ['Enforce for Admins', protectionConfig.protection.enforce_admins ? '✅ Yes' : '❌ No'],
                  ['Require Linear History', protectionConfig.protection.required_linear_history ? '✅ Yes' : '❌ No'],
                  ['Allow Force Pushes', protectionConfig.protection.allow_force_pushes ? '⚠️ Yes' : '✅ No'],
                  ['Require Conversation Resolution', protectionConfig.protection.required_conversation_resolution ? '✅ Yes' : '❌ No']
                ])
                .addDetails('Required Status Checks', 
                  protectionConfig.protection.required_status_checks.contexts
                    .map(check => `- ${check}`)
                    .join('\n')
                )
                .write();
                
            } catch (error) {
              console.error('❌ Failed to setup branch protection:', error);
              throw error;
            }

      - name: Validate Protection Rules
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = '${{ inputs.branch }}';
            
            try {
              const response = await github.rest.repos.getBranchProtection({
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: branch
              });
              
              console.log('✅ Branch protection rules verified');
              console.log('Current protection:', JSON.stringify(response.data, null, 2));
              
            } catch (error) {
              if (error.status === 404) {
                console.error('❌ Branch protection not found - setup may have failed');
              } else {
                console.error('❌ Failed to validate branch protection:', error);
              }
              throw error;
            }